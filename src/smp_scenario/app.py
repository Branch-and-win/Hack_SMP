import os
import io
import shutil
import zipfile
from datetime import datetime

import openpyxl
import pandas as pd
from fastapi import FastAPI, UploadFile
from fastapi.responses import StreamingResponse

from src.smp_model.graph.length_velocity_calc import dump_velocity_length
from src.smp_scenario.parent_scenario import ParentScenario
from src.smp_scenario.parent_scenario_config import ParentScenarioConfig
from src.smp_scenario.scenario import Scenario
from src.smp_scenario.scenario_config import ScenarioConfig


description = """
API –¥–ª—è —Å–µ—Ä–≤–∏—Å–∞ –ø–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∞—Ç–æ–º–Ω—ã—Ö –ª–µ–¥–æ–∫–æ–ª–æ–≤ –ø–æ –°–ú–ü.

## –°—Ü–µ–Ω–∞—Ä–∏–∏

**create_scenario** - 
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤. 

–ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å
 –∑–∞—è–≤–∫–∏, —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ª–µ–¥–æ–∫–æ–ª–æ–≤ –∏ —Å—É–¥–æ–≤, –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–æ—á–∫–∏ —Å–±–æ—Ä–∞
 –∫–∞—Ä–∞–≤–∞–Ω–æ–≤, –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–µ–±—Ä–∞–º–∏ –≥—Ä–∞—Ñ–∞ –°–ú–ü. –í –∑–∞–ø—É—Å–∫ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ
 —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ª—å–¥–∞ –Ω–∞ –∫–∞–∂–¥–æ–º –¥–æ–ø—É—Å—Ç–∏–º–æ–º —Ä–µ–±—Ä–µ –°–ú–ü (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç—Ç–æ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–æ–≥–æ –≤—ã–∑–æ–≤–∞
 api —Å–∏—Å—Ç–µ–º—ã calculate_ice_integrality.
 
–î–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è. –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è,
 –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å–≤–µ—Ä—Ö –ø–ª–∞–Ω–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
 –ª—É—á—à–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.

**create_parent_scenario** - 
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —Å—Ü–µ–Ω–∞—Ä–∏–π. –ó–∞–ø—É—Å–∫ —Ç–∞–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏,
 –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è.

–î–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - –¥–∞—Ç—É –¥–æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
 —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
 
**download_scenario**
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –≤—Ö–æ–¥–Ω—ã–µ –∏ –≤—ã—Ö–æ–¥–Ω—ã–µ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å) –¥–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.

## –ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ

**calculate_scenario** - 
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ª–µ–¥–æ–∫–æ–ª–æ–≤ –ø–æ –°–ú–ü. 

**calculate_ice_integrality** - 
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—á–µ—Ç —Ç—è–∂–µ—Å—Ç–∏ –ª—å–¥–∞.

–ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ª–µ–¥–æ–≤–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ, –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ø–æ—Ä—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –≥—Ä–∞—Ñ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –≤ –°–ú–ü.

## –û—Ç—á–µ—Ç

–ü–æ—Å–ª–µ —Ä–∞—Å—á–µ—Ç–∞ —Å—Ü–µ–Ω–∞—Ä–∏—è –º–æ–∂–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –¥–∞—à–±–æ—Ä–¥ –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è. –ó–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞ –æ—Ç–≤–µ—á–∞–µ—Ç
 –æ—Ç–¥–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–∏—Å dash_app, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç—á–µ—Ç–∞.
"""

app = FastAPI(
    title="üö¢ BnW_SMP",
    description=description,
    summary="–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ª–µ–¥–æ–∫–æ–ª–æ–≤ –≤ –°–ú–ü –∫–æ–º–∞–Ω–¥—ã Branch and Win.",
    version="0.0.1",
    contact={
        "name": "Branch and Win.",
        # "url": "http://x-force.example.com/contact/",
        "email": "ivs.rodin@gmail.com",
    },
    swagger_ui_parameters={"syntaxHighlight.theme": "obsidian"},
)


@app.post('/create_scenario/', tags=['–°—Ü–µ–Ω–∞—Ä–∏–∏'])
async def create_scenario(
        name: str,
        main_data: UploadFile,
        velocity_env: UploadFile,
        start_date: str = '27-02-2022',
        duration_days: int = 7,
        # interval_hours: int = 1,
        cross_days: int = 2,
        timelimit: int = 900,
        k_bests: int = 5,
):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤.

    –ü—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–¥–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–ª–∏ —É–¥–∞–ª–∏—Ç—å
     –∑–∞—è–≤–∫–∏, —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –ª–µ–¥–æ–∫–æ–ª–æ–≤ –∏ —Å—É–¥–æ–≤, –∏–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤, –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–æ—á–∫–∏ —Å–±–æ—Ä–∞
     –∫–∞—Ä–∞–≤–∞–Ω–æ–≤, –∏–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –º–µ–∂–¥—É —Ä–µ–±—Ä–∞–º–∏ –≥—Ä–∞—Ñ–∞ –°–ú–ü. –í –∑–∞–ø—É—Å–∫ —Ç–∞–∫–∂–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ
     —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ª—å–¥–∞ –Ω–∞ –∫–∞–∂–¥–æ–º –¥–æ–ø—É—Å—Ç–∏–º–æ–º —Ä–µ–±—Ä–µ –°–ú–ü (–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —ç—Ç–æ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é –¥—Ä—É–≥–æ–≥–æ –≤—ã–∑–æ–≤–∞
     api —Å–∏—Å—Ç–µ–º—ã calculate_ice_integrality.

    –î–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤—ã—Å—Ç–∞–≤–∏—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏—è. –ú–æ–∂–Ω–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è,
     –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å–≤–µ—Ä—Ö –ø–ª–∞–Ω–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
     –ª—É—á—à–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ –¥–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
    """
    if name == 'base':
        return {'result': 'error', 'desc': f'–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name}'}

    if not main_data.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {main_data.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}
    if not velocity_env.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {velocity_env.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}

    scenario_dir = os.path.join('.', 'data', 'scenarios', name)
    if os.path.exists(scenario_dir):
        shutil.rmtree(scenario_dir)
    os.makedirs(scenario_dir)

    input_dir = os.path.join(scenario_dir, 'input')
    os.makedirs(input_dir)
    output_dir = os.path.join(scenario_dir, 'output')
    os.makedirs(output_dir)

    f = await main_data.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(input_dir, 'model_data.xlsx'))

    f = await velocity_env.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(input_dir, 'velocity_env.xlsx'))

    config = ScenarioConfig(
        start_date=start_date,
        duration_days=duration_days,
        interval_hours=1,
        cross_days=cross_days,
        timelimit=timelimit,
        k_bests=k_bests,
    )
    config.to_json(input_dir)

    return {'result': 'success', 'desc': f'–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã'}


@app.post('/create_parent_scenario/', tags=['–°—Ü–µ–Ω–∞—Ä–∏–∏'])
async def create_parent_scenario(
        name: str,
        main_data: UploadFile,
        velocity_env: UploadFile,
        start_date: str = '27-02-2022',
        end_date: str = '05-05-2022',
        duration_days: int = 7,
        # interval_hours: int = 1,
        cross_days: int = 2,
        timelimit: int = 900,
        k_bests: int = 5,
):
    """
    –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è. –ó–∞–ø—É—Å–∫ —Ç–∞–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏ –≤—Ä–µ–º–µ–Ω–∏,
     –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —Å—Ü–µ–Ω–∞—Ä–∏—è.

    –î–ª—è —Å—Ü–µ–Ω–∞—Ä–∏—è –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è - –¥–∞—Ç—É –¥–æ –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –æ—Å—É—â–µ—Å—Ç–≤–ª–µ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
     —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è.
     """

    if name == 'base':
        return {'result': 'error', 'desc': f'–ó–∞–ø—Ä–µ—â–µ–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ü–µ–Ω–∞—Ä–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name}'}

    if not main_data.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {main_data.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}
    if not velocity_env.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {velocity_env.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}

    scenario_dir = os.path.join('.', 'data', 'scenarios', name)
    if os.path.exists(scenario_dir):
        shutil.rmtree(scenario_dir)
    os.makedirs(scenario_dir)

    input_dir = os.path.join(scenario_dir, 'input')
    os.makedirs(input_dir)
    output_dir = os.path.join(scenario_dir, 'output')
    os.makedirs(output_dir)

    f = await main_data.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(input_dir, 'model_data.xlsx'))

    f = await velocity_env.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(input_dir, 'velocity_env.xlsx'))

    config = ParentScenarioConfig(
        start_date=start_date,
        end_date=end_date,
        duration_days=duration_days,
        interval_hours=1,
        cross_days=cross_days,
        timelimit=timelimit,
        k_bests=k_bests,
    )
    config.to_json(input_dir)

    return {'result': 'success', 'desc': f'–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã'}


@app.post('/download_scenario/', tags=['–°—Ü–µ–Ω–∞—Ä–∏–∏'])
async def download_scenario(
        name: str = 'base',
):
    """
    –í—ã–≥—Ä—É–∑–∫–∞ –≤—Ö–æ–¥–Ω—ã—Ö –∏ –≤—ã—Ö–æ–¥–Ω—ã—Ö (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å) –¥–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏—è.
    """

    scenario_dir = os.path.join('.', 'data', 'scenarios', name)
    if not os.path.exists(scenario_dir):
        return {'result': 'error', 'desc': f'–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã'}

    tmp_zf_path = os.path.join('.', 'data', 'tmp', f'{name}.zip')
    tmp_zf_data = zipfile.ZipFile(tmp_zf_path, "w")
    for dirname, subdirs, files in os.walk(scenario_dir):
        for filename in files:
            short_dirname = dirname.replace(f'/data/scenarios/{name}', '')
            tmp_zf_data.write(os.path.join(dirname, filename), os.path.join(short_dirname, filename))
    tmp_zf_data.close()

    return_data = io.BytesIO()
    with open(tmp_zf_path, 'rb') as fo:
        return_data.write(fo.read())
    return_data.seek(0)

    os.remove(tmp_zf_path)

    return StreamingResponse(return_data, media_type="application/zip",
                             headers={'Content-Disposition': f'attachment; filename="input_{name}"'})


@app.post('/calculate_scenario/', tags=['–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ'])
async def calculate_scenario(
        name: str = 'base',
        is_parent: bool = False,
):
    """
    –ó–∞–ø—É—Å–∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –ª–µ–¥–æ–∫–æ–ª–æ–≤ –ø–æ –°–ú–ü.

    **is_parent** -- –ø—Ä–∏–∑–Ω–∞–∫ –∑–∞–ø—É—Å–∫–∞ –≤ —Ä–µ–∂–∏–º–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è (–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤)
    """

    scenario_dir = os.path.join('.', 'data', 'scenarios', name)
    if not os.path.exists(scenario_dir):
        return {'result': 'error', 'desc': f'–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º {name} –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã'}

    if is_parent:
        scenario = ParentScenario.create_scenario(scenario_folder_path=scenario_dir, scenario_name=name)
    else:
        scenario = Scenario.create_scenario(scenario_folder_path=scenario_dir, scenario_name=name)

    try:
        scenario.optimize()
    except Exception as e:
        return {'result': 'error', 'desc': f'–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–µ—à–∏—Ç—å –º–æ–¥–µ–ª—å\n{e}'}

    return {'result': 'success', 'desc': f'–°—Ü–µ–Ω–∞—Ä–∏–π {name} —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å—á–∏—Ç–∞–Ω'}


@app.post('/calculate_ice_integrality/', tags=['–ú–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ'])
async def calculate_ice_integrality(
        main_data: UploadFile,
        integer_velocity: UploadFile,
):
    """
    –ó–∞–ø—É—Å–∫ —Ä–∞—Å—á–µ—Ç–∞ —Ç—è–∂–µ—Å—Ç–∏ –ª—å–¥–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ - —Ç–∞–±–ª–∏—Ü–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ç—è–∂–µ—Å—Ç—å—é –ª—å–¥–∞ –Ω–∞ –∫–∞–∂–¥—É—é
    –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é –¥–∞—Ç—É.

    –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ª–µ–¥–æ–≤–æ–π –æ–±—Å—Ç–∞–Ω–æ–≤–∫–µ, –¥–∞–Ω–Ω—ã–µ –æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ø–æ—Ä—Ç–æ–≤, –∞ —Ç–∞–∫–∂–µ –≥—Ä–∞—Ñ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
    –≤ –°–ú–ü.
    """

    if not main_data.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {main_data.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}
    if not integer_velocity.filename.endswith('.xlsx'):
        return {'result': 'error', 'desc': f'–§–∞–π–ª {integer_velocity.filename} –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ñ–æ—Ä–º–∞—Ç–∞ .xlsx'}

    tmp_folder_name = 'iw_' + datetime.now().strftime("%Y%m%d%H")
    tmp_dir_path = os.path.join('.', 'data', 'tmp', tmp_folder_name)
    if os.path.exists(tmp_dir_path):
        shutil.rmtree(tmp_dir_path)
    os.makedirs(tmp_dir_path)

    f = await main_data.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(tmp_dir_path, 'model_data.xlsx'))

    f = await integer_velocity.read()
    xlsx = io.BytesIO(f)
    wb = openpyxl.load_workbook(xlsx)
    wb.save(os.path.join(tmp_dir_path, 'IntegrVelocity.xlsx'))

    result_df = dump_velocity_length(tmp_dir_path)
    shutil.rmtree(tmp_dir_path)
    with pd.ExcelWriter(os.path.join(tmp_dir_path, 'velocity_env.xlsx')) as writer:
        result_df.to_excel(writer)

    tmp_zf_path = os.path.join(tmp_dir_path, f'result.zip')
    tmp_zf_data = zipfile.ZipFile(tmp_zf_path, "w")
    for dirname, subdirs, files in os.walk(tmp_dir_path):
        for filename in files:
            short_dirname = dirname.replace(f'/data/tmp/{tmp_folder_name}', '')
            tmp_zf_data.write(os.path.join(dirname, filename), os.path.join(short_dirname, filename))
    tmp_zf_data.close()

    return_data = io.BytesIO()
    with open(tmp_zf_path, 'rb') as fo:
        return_data.write(fo.read())
    return_data.seek(0)

    # shutil.rmtree(tmp_dir_path)

    return StreamingResponse(return_data, media_type="application/zip",
                             headers={'Content-Disposition': f'attachment; filename="result"'})
